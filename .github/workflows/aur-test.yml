name: AUR Package Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test-aur-installation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Arch Linux in Docker
      run: |
        # Pull Arch Linux image
        docker pull archlinux:latest
        
        # Install dependencies and yay
        docker run --rm -v $(pwd):/workspace archlinux:latest bash -c "
          pacman -Sy --noconfirm base-devel git sudo
          useradd -m -G wheel testuser
          echo 'testuser ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          su - testuser -c 'cd /tmp && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm --needed'
        "
        
    - name: Test AUR package availability
      run: |
        # Test package info using curl to AUR API
        curl -s "https://aur.archlinux.org/rpc/?v=5&type=info&arg=guiman" | jq '.results[0] | {Name, Version, Description, URL, License}'
        
    - name: Test package dependencies
      run: |
        # Check dependencies via AUR API
        curl -s "https://aur.archlinux.org/rpc/?v=5&type=info&arg=guiman" | jq '.results[0] | {Depends, MakeDepends, OptDepends}'
        
    - name: Verify package metadata
      run: |
        # Check package version and status
        curl -s "https://aur.archlinux.org/rpc/?v=5&type=info&arg=guiman" | jq '.results[0] | {Name, Version, Description, URL, License, OutOfDate}'
        
    - name: Test package search
      run: |
        # Test that package can be found via search
        curl -s "https://aur.archlinux.org/rpc/?v=5&type=search&arg=guiman" | jq '.results[] | select(.Name == "guiman") | {Name, Version, Description}'
